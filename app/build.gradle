import AnnotationProcessing
import Application
import Versions
import Java
import Build
import Repositories

import dependencies.SupportDependencies
import dependencies.AndroidTestDependencies
import dependencies.Dependencies
import dependencies.TestDependencies

apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'kotlin-kapt'

apply plugin: 'com.google.firebase.crashlytics'

apply plugin: 'com.google.gms.google-services' // Google Services Gradle plugin



android {
    compileSdkVersion Versions.compilesdk
    defaultConfig {
        applicationId Application.id
        minSdkVersion Versions.minsdk
        targetSdkVersion Versions.targetsdk
        versionCode Application.version_code
        versionName Application.version_name

        testInstrumentationRunner AndroidTestDependencies.instrumentation_runner
    }
    buildTypes {
        debug {
            minifyEnabled false
            manifestPlaceholders = [enableCrashReporting:"false"]
        }
        release {
            minifyEnabled false
            manifestPlaceholders = [enableCrashReporting:"true"]
        }
    }

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = Java.java_version
    }

    sourceSets{
        test.resources.srcDirs += "src/test/res"
    }

    testOptions{
        unitTests.all {
            useJUnitPlatform()
        }
    }
}


dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    // Kotlin
    implementation Dependencies.kotlin_standard_library
    implementation Dependencies.kotlin_reflect
    implementation Dependencies.ktx
    implementation Dependencies.kotlin_coroutines
    implementation Dependencies.kotlin_coroutines_android
    implementation Dependencies.kotlin_coroutines_play_services
    implementation Dependencies.room_ktx
    implementation Dependencies.room_runtime

    // dependency
    implementation Dependencies.dagger
    implementation Dependencies.firebase_firestore
    implementation Dependencies.firebase_auth
    implementation Dependencies.firebase_analytics
    implementation Dependencies.firebase_crashlytics
    implementation Dependencies.retrofit
    implementation Dependencies.retrofit_gson


    // Annotation Processiong
    kapt AnnotationProcessing.dagger_compiler
    kapt AnnotationProcessing.room_compiler

    // Support
    implementation SupportDependencies.appcompat
    implementation SupportDependencies.constraintlayout
    implementation SupportDependencies.material_design
    implementation SupportDependencies.swipe_refresh_layout

    // Unit Test
    testImplementation TestDependencies.mockk
    testImplementation TestDependencies.jupiter_api
    testImplementation TestDependencies.jupiter_params
    testImplementation TestDependencies.junit4
    testImplementation Dependencies.retrofit_gson
    testRuntimeOnly TestDependencies.jupiter_engine

    androidTestImplementation AndroidTestDependencies.kotlin_test
    androidTestImplementation AndroidTestDependencies.coroutines_test
    androidTestImplementation AndroidTestDependencies.espresso_core
    androidTestImplementation AndroidTestDependencies.espresso_contrib
    androidTestImplementation AndroidTestDependencies.idling_resource
    androidTestImplementation AndroidTestDependencies.mockk_android
    androidTestImplementation AndroidTestDependencies.test_runner
    androidTestImplementation AndroidTestDependencies.test_rules
    androidTestImplementation AndroidTestDependencies.text_core_ktx
    androidTestImplementation AndroidTestDependencies.navigation_testing
    debugImplementation AndroidTestDependencies.fragment_testing
    kaptAndroidTest  AnnotationProcessing.dagger_compiler


}