import AnnotationProcessing
import dependencies.AndroidTestDependencies
import dependencies.Dependencies
import Application
import Versions
import Java
import dependencies.SupportDependencies

apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'kotlin-kapt'


android {
    compileSdkVersion Versions.compilesdk
    defaultConfig {
        applicationId Application.id
        minSdkVersion Versions.minsdk
        targetSdkVersion Versions.targetsdk
        versionCode Application.version_code
        versionName Application.version_name

        testInstrumentationRunner AndroidTestDependencies.instrumentation_runner
    }
    buildTypes {
        debug {
            minifyEnabled false
        }
        release {
            minifyEnabled false
        }
    }

    compileOptions {
        sourceCompatibility = Java.java_version
        targetCompatibility = Java.java_version
    }

    kotlinOptions {
        jvmTarget = Java.java_version
    }
}


dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    // Kotlin
    implementation Dependencies.kotlin_standard_library
    implementation Dependencies.kotlin_reflect
    implementation Dependencies.ktx

    // dependency
    implementation Dependencies.dagger
    implementation Dependencies.firebase_firestore
    implementation Dependencies.firebase_auth
    implementation Dependencies.firebase_analytics
    implementation Dependencies.firebase_crashlytics
    implementation Dependencies.kotlin_coroutines
    implementation Dependencies.kotlin_coroutines_android
    implementation Dependencies.kotlin_coroutines_play_services
    implementation project(path: ':')
    implementation project(path: ':')
    implementation project(path: ':')
    implementation project(path: ':')
    implementation project(path: ':')
    implementation project(path: ':')

    // Annotation Processiong
    kapt AnnotationProcessing.dagger_compiler

    // Support
    implementation SupportDependencies.appcompat
    implementation SupportDependencies.constraintlayout
    implementation SupportDependencies.material_design
    implementation SupportDependencies.swipe_refresh_layout
}